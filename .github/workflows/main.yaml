name: main

env:
  LANG: C.UTF-8
  GH_TOKEN: ${{ github.token }}

on:
  push:
    branches: main
  pull_request:
    branches: main

permissions:
  contents: write
  packages: write

jobs:
  build-and-test:
    name: GHC ${{ matrix.ghc-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04]
        ghc-version: ['9.6.6']
        cabal-version: ['3.12.1.0']
    steps:
      - uses: actions/checkout@v4

      # Following https://github.com/docker/build-push-action?tab=readme-ov-file#usage
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and test
        uses: docker/build-push-action@v6
        with:
          pull: true
          push: ${{ github.event_name != 'pull_request' }} # Don't push on PRs.
          tags: ghcr.io/spex-lang/spex-build:latest
          # https://docs.docker.com/build/ci/github-actions/cache/#github-cache
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .

      - name: Create new git tag, if merge to main and .cabal version is bumped
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: sol/haskell-autotag@v1
        id: autotag

      - name: Build static binaries
        # if: steps.autotag.outputs.created
        uses: docker/build-push-action@v6
        with:
          pull: true
          push: ${{ github.event_name != 'pull_request' }} # Don't push on PRs.
          tags: ghcr.io/spex-lang/spex:latest
          # https://docs.docker.com/build/ci/github-actions/cache/#github-cache
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: BUILDKIT_CONTEXT_KEEP_GIT_DIR=1
          context: .

      - name: Release
        # if: steps.autotag.outputs.created
        run: |
          docker create --name dummy ghcr.io/spex-lang/spex:latest
          docker cp dummy:/usr/local/bin/spex "${{ github.workspace }}/bin/"
          docker rm -f dummy
          gh release create --draft --notes-file=CHANGELOG.md \
            ${{ steps.autotag.outputs.version  }} 

